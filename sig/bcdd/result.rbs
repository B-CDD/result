module BCDD
  module Result
    VERSION: String
  end
end

module BCDD::Result
  class Error < ::StandardError
    class NotImplemented < Error
    end
  end
end

module BCDD::Result
  class Base
    attr_reader type: Symbol
    attr_reader value: untyped

    def initialize: (type: Symbol, value: untyped) -> void

    def success?: (Symbol ?type) -> bool
    def failure?: (Symbol ?type) -> bool

    def value_or: { () -> untyped } -> untyped

    def ==: (untyped) -> bool
    alias eql? ==

    def hash: -> Integer

    def inspect: -> String
  end
end

module BCDD::Result
  class Failure < BCDD::Result::Base
  end
end

module BCDD::Result
  class Success < BCDD::Result::Base
  end
end
